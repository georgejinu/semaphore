- name: Docker Swarm Cluster IPs
  hosts: all
  tasks:
    - name: Debug Manager and Worker IPs
      debug:
        msg:
          - 'manager1_ip: {{ manager1_ip }}'
          - 'manager2_ip: {{ manager2_ip }}'
          - 'worker1_ip: {{ worker1_ip }}'
          - 'worker2_ip: {{ worker2_ip }}'
          - 'worker3_ip: {{ worker3_ip }}'

- name: Initialize Docker Swarm Cluster
  hosts: managers[0]
  become: true
  become_user: root
  tasks:
    - name: Initialize Docker Swarm on the first manager
      command: docker swarm init --advertise-addr {{ manager1_ip }}
      register: swarm_init_output
      ignore_errors: true

    - name: Get manager join token
      command: docker swarm join-token manager -q
      register: manager_join_token
      when: swarm_init_output.rc == 0

    - name: Get worker join token
      command: docker swarm join-token worker -q
      register: worker_join_token
      when: swarm_init_output.rc == 0

    - name: Debug manager token
      debug:
        msg: 'Manager join token: {{ manager_join_token.stdout }}'

    - name: Debug worker token
      debug:
        msg: 'Worker join token: {{ worker_join_token.stdout }}'

    - name: Save manager token
      copy:
        content: '{{ manager_join_token.stdout }}'
        dest: /tmp/manager_join_token

    - name: Save worker token
      copy:
        content: '{{ worker_join_token.stdout }}'
        dest: /tmp/worker_join_token

    - name: Mark swarm initialization complete
      file:
        path: /tmp/swarm_initialized
        state: touch
      when: swarm_init_output.rc == 0

- name: Join additional managers to the Swarm
  hosts: managers[1:]
  become: true
  become_user: root
  tasks:
    - name: Wait for swarm initialization to complete
      wait_for:
        path: /tmp/swarm_initialized
        timeout: 300
      delegate_to: '{{ manager1_ip }}'

    - name: Read the manager join token from the first manager
      shell: cat /tmp/manager_join_token
      register: manager_join_token
      delegate_to: '{{ manager1_ip }}'

    - name: Join the Swarm as a manager
      command: docker swarm join --token {{ manager_join_token.stdout }} {{ manager1_ip }}:2377

    - name: Mark managers joined
      file:
        path: /tmp/managers_joined
        state: touch
      delegate_to: '{{ manager1_ip }}'

- name: Join worker nodes to the Swarm
  hosts: workers
  become: true
  become_user: root
  tasks:
    - name: Wait for swarm initialization and managers to join
      wait_for:
        path: '{{ item }}'
        timeout: 300
      delegate_to: '{{ manager1_ip }}'
      with_items:
        - /tmp/swarm_initialized
        - /tmp/managers_joined

    - name: Read the worker join token from the first manager
      shell: cat /tmp/worker_join_token
      register: worker_join_token
      delegate_to: '{{ manager1_ip }}'

    - name: Join the Swarm as a worker
      command: docker swarm join --token {{ worker_join_token.stdout }} {{ manager1_ip }}:2377
